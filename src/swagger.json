{
  "openapi": "3.0.0",
  "info": {
    "title": "User management documentation",
    "description": "This is an API for registering and listing users, developed for the Ignite - NodeJS bootcamp challenge from Rocketseat",
    "version": "1.0.0",
    "contact": {
      "name": "Developer - Ian Ramos",
      "email": "ianramossantos@hotmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3333",
      "description": "Local server"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create an user",
        "description": "Create a new standard user who is not a administrator",
        "operationId": "createUser",
        "parameters": [],
        "requestBody": {
          "description": "User object to be added to the application",
          "content": {
            "application/json": {
              "schema": { 
                "$ref": "#/components/schemas/User"
              }
            }
          },
        "required": true
        },
        "responses": {
          "201": {
            "description": "The user has been created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "The user is already registered in the system",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User already exists",
                  "code": "400",
                  "error": "Bad Request"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "List all users",
        "description": "List all registered users, if the user making the request is an administrator",
        "operationId": "listAllUsers",
        "parameters": [
          {
            "name": "user_id",
            "in": "header",
            "description": "Id of the user making the request",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listing success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedUsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "User don't have permission to list all users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "You don't have permission to do that",
                  "code": "400",
                  "error": "Bad Request"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Returns a specific user",
        "description": "Returns data for a single user identified by the ID in the parameters",
        "operationId": "returnOneUser",
        "parameters": [
          {
            "$ref": "#/components/schemas/idOnPath"
          }
        ],
        "responses": {
          "200": {
            "description": "The user data returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "404": {
            "description": "The user was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User not found",
                  "code": "404",
                  "error": "Not Found"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/admin": {
      "patch": {
        "tags": ["Users"],
        "summary": "Make a user an administrator",
        "description": "Gives administrator permissions to a specific user",
        "operationId": "makeUserAdmin",
        "parameters": [
          {
            "$ref": "#/components/schemas/idOnPath"
          }
        ],
        "responses": {
          "200": {
            "description": "The user is now an administrator",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAdminResponse"
                }
              }
            }
          },
          "404": {
            "description": "The user was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User not found",
                  "code": "404",
                  "error": "Not Found"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "name": {
        "type": "string",
        "description": "Username to be registered",
        "example": "Flora Ramos"
      },
      "email": {
        "type": "string",
        "description":"Email of the user to be registered",
        "example": "flora_ramos@user.com"
      },
      "id": {
        "type": "string",
        "format": "uuid",
        "description": "The unique user ID"
      },
      "admin": {
        "type": "boolean",
        "description": "The user permission",
        "example": false
      },
      "created_at": {
        "type": "string",
        "format": "date-time",
        "description": "User creation date"
      },
      "updated_at": {
        "type": "string",
        "format": "date-time",
        "description": "User update date"
      },
      "idOnPath": {
        "name": "user_id",
        "in": "path",
        "description": "User id to be returned",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/id"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          }
        }
      },
      "UserCreatedResponse": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "admin": {
            "$ref": "#/components/schemas/admin"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "created_at": {
            "$ref": "#/components/schemas/created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/updated_at"
          }
        }
      },
      "ListedUsersResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "$ref": "#/components/schemas/id"
            },
            "admin": {
              "$ref": "#/components/schemas/admin"
            },
            "name": {
              "$ref": "#/components/schemas/name"
            },
            "email": {
              "$ref": "#/components/schemas/email"
            },
            "created_at": {
              "$ref": "#/components/schemas/created_at"
            },
            "updated_at": {
              "$ref": "#/components/schemas/updated_at"
            }
          }
        }
      },
      "UserProfileResponse": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "admin": {
            "$ref": "#/components/schemas/admin"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "created_at": {
            "$ref": "#/components/schemas/created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/updated_at"
          }
        }
      },
      "UserAdminResponse": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "admin": {
            "type": "boolean",
            "description": "The user permission",
            "example": true
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "created_at": {
            "$ref": "#/components/schemas/created_at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/updated_at"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "number"
          },
          "error": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "documentation": {
            "type": "string"
          }
        }
      }
    }
  }
}